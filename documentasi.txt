FUNCTION (DONE) XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


function yang dipakai: untuk mencari tahu status dari sebuah kamar

DELIMITER //
CREATE FUNCTION status(date date, nomor integer) RETURNS CHARACTER
BEGIN
 DECLARE jadi integer;
 	set hasil=	(SELECT a.tanggal_keluar FROM transaksi a INNER JOIN detail_transaksi b ON b.no_transaksi = a.no_transaksi WHERE b.no_kamar = nomor AND a.tanggal_keluar BETWEEN date AND '2050-01-01');
  set jadi = ifnull(hasil,1);
 
  RETURN jadi;
END 
                 //
DELIMITER ;

-----------------------------------------------
STORE PROCEDURE(DONE) XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
menampilakan keterangan dari kamar yang sewa

DELIMITER //
CREATE PROCEDURE tampilDetailTransaksi(IN id INT)
BEGIN 
SELECT b.no_kamar, b.jenis_kamar,b.harga
FROM transaksi a 
INNER JOIN kamar b on a.no_kamar = b.no_kamar
WHERE a.no_transaksi = id;
END //
DELIMITER ;

------------------------------------------------
SINGLE FUNCTION(DONE) XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
menampilkan PENGUNJUNG menggunaan UPPER CASE.
select UPPER(nama) as nama,alamat,jk,no_hp,no_ktp from pengunjung;

SELECT id_pengunjung, UPPER(nama) as nama, alamat, jk, no_hp, no_ktp FROM pengunjung;
-------------------------------
SORTING(DONE)XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
menampilkan transaksi yang total_harganya dari terbesar ke terkecil

SELECT a.no_transaksi, b.nama as namaKaryawan, c.nama as namaPengunjung, a.jumlah_kamar,a.tanggal_masuk,a.tanggal_keluar,a.lama_menginap,a.total_harga
FROM transaksi a 
INNER JOIN karyawan b on b.id_karyawan = a.id_karyawan
INNER JOIN pengunjung c on c.id_pengunjung = a.id_pengunjung
ORDER BY a.total_harga DESC
-----------------------------------------
VIEW(DONE)XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
menampilkan untuk pengunjung beserta tanggal masuk dan keluarnya.

CREATE VIEW cekid AS SELECT
   UPPER( pengunjung.nama) as nama,
    pengunjung.alamat,
    pengunjung.jk,
    pengunjung.no_hp,
    pengunjung.no_ktp,
    transaksi.tanggal_masuk,
    transaksi.tanggal_keluar
FROM
    transaksi
INNER JOIN pengunjung ON transaksi.id_pengunjung = pengunjung.id_pengunjung;

--------------------------------
SUBQUERY(DONE)XXXXXXXXXXXXXXXXXXXXXXXXXXXX
menampilkan pengunjung berdasarkan no ktp atau nama.

("SELECT id_pengunjung, UPPER(nama) as nama, alamat, jk, no_hp, no_ktp FROM pengunjung WHERE (no_ktp = [keyword]) OR (`nama` LIKE '%[keyword]') ")
-----------------------------------------------
JOIN (DONE)XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
menampilakn detail transaksi yang terdapat pada procedure

SELECT b.no_kamar, b.jenis_kamar,b.harga
FROM kamar a 
INNER JOIN kamar b on a.no_kamar = b.no_kamar
WHERE a.no_transaksi = 1

-----------------------------------------------------
CONTROL FLOW (DONE)XXXXXXXXXXXXXXXXXXXXX
MENAMPILKAN STATUS KAMAR menggunakan function dengan control flow statement IF

SELECT a.no_kamar, a.jenis_kamar, a.harga , IF(`status`(' . date('Y-m-d') . ',a.no_kamar)=1,"Kosong","Terpakai") AS ketersediaan
from kamar a;

----------------------------------------------

AGGREGATE 
MAX: mencari pembayaran kamar hotel terbesar
...........................................
MIN: untuk mencari pembayaran hotel terkecil
...........................................
SUM : untuk menjumnlahkan transaksi keseluruhan
---------------------------------------------------
(DONE)xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
COUNT: untuk menghitung jumlah pengunjung sebagai tanda apakah pengunjung sudah pernah terdaftar

SELECT COUNT (*) as banyak FROM pengunjung;

---------------------------------------------
TRIGGER 
MASIH DIPIKIRKAN





